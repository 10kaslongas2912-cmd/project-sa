import React, { useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { useDog } from "../../../../hooks/useDog"; // Hook ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏ô‡∏±‡∏Ç
import type { CreateAdoptionRequest } from '../../../../interfaces/Adoption';
import './style.css'; // ‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤

const AdoptionForm: React.FC = () => {
    // 1. ‡∏î‡∏∂‡∏á dogId ‡∏à‡∏≤‡∏Å URL parameter
    const { dogId } = useParams<{ dogId: string }>();
    const navigate = useNavigate();

    // 2. ‡πÉ‡∏ä‡πâ useDog hook ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏ô‡∏±‡∏Ç, ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ loading, ‡πÅ‡∏•‡∏∞ error
    const { dog, loading: loadingDog, error: dogFetchError } = useDog(dogId ? Number(dogId) : null);

    // 3. State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
    const [formData, setFormData] = useState<CreateAdoptionRequest>({
        first_name: '', last_name: '', phone_number: '',
        address: '', district: '', city: '', province: '',
        zip_code: '', job: '', income: 0,
        dog_id: parseInt(dogId || '0'), // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î dog_id ‡πÉ‡∏´‡πâ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤
    });
    const [loadingSubmit, setLoadingSubmit] = useState(false);
    const [formError, setFormError] = useState('');

    // 4. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        const { name, value } = e.target;
        setFormData(prev => ({
            ...prev,
            [name]: name === 'income' ? parseFloat(value) || 0 : value,
        }));
    };

    // 5. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏õ‡∏´‡∏≤ Backend
    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        setFormError('');
        setLoadingSubmit(true);

        try {
            // Endpoint ‡∏ô‡∏µ‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏ô Go router
            const response = await fetch('http://localhost:8000/adoptions', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formData),
            });

            const result = await response.json();
            if (!response.ok) {
                // ‡πÅ‡∏™‡∏î‡∏á error ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏°‡∏≤‡∏à‡∏≤‡∏Å Backend
                throw new Error(result.error || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
            }
            alert('‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!');
            navigate('/'); // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        } catch (err: unknown) {
            if (err instanceof Error) {
                setFormError(err.message);
            } else {
                setFormError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å');
            }
        } finally {
            setLoadingSubmit(false);
        }
    };

    // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î" ‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏ô‡∏±‡∏Ç
    if (loadingDog) {
        return <div className="loading-container">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏ô‡∏±‡∏Ç...</div>;
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏´‡∏≤‡∏Å‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏ô‡∏±‡∏Ç‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    if (dogFetchError) {
        return <div className="error-message">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {dogFetchError}</div>;
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏´‡∏•‡∏±‡∏Å
    return (
        <div className="adoption-container">
            <div className="adoption-header">
                <h1>‡∏ó‡πà‡∏≤‡∏ô‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏à‡∏∞‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á</h1>
            </div>
            <div className="adoption-content">
                <div className="dog-section">
                    {dog ? (
                        <>
                            <div
                                className="dog-photo"
                                style={{ backgroundImage: `url(${dog.photo_url || 'https://via.placeholder.com/200/cccccc/ffffff?text=üêï'})` }}
                            />
                            <h2 className="dog-name">{dog.name}</h2>
                        </>
                    ) : (
                        <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏ô‡∏±‡∏Ç‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</p>
                    )}
                </div>
                <div className="form-section">
                    <h2 className="form-title">‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô</h2>
                    {formError && <div className="error-message">{formError}</div>}
                    <form onSubmit={handleSubmit}>
                        <div className="form-row">
                            <div className="form-group">
                                <label>‡∏ä‡∏∑‡πà‡∏≠*</label>
                                <input type="text" name="first_name" value={formData.first_name} onChange={handleInputChange} required />
                            </div>
                            <div className="form-group">
                                <label>‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•*</label>
                                <input type="text" name="last_name" value={formData.last_name} onChange={handleInputChange} required />
                            </div>
                        </div>
                        <div className="form-group">
                            <label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠*</label>
                            <input type="tel" name="phone_number" value={formData.phone_number} onChange={handleInputChange} required />
                        </div>
                        <div className="form-row">
                            <div className="form-group">
                                <label>‡∏≠‡∏≤‡∏ä‡∏µ‡∏û*</label>
                                <input type="text" name="job" value={formData.job} onChange={handleInputChange} required />
                            </div>
                            <div className="form-group">
                                <label>‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≠‡∏õ‡∏µ (‡∏ö‡∏≤‡∏ó)</label>
                                <input type="number" name="income" value={formData.income || ''} onChange={handleInputChange} min="0" />
                            </div>
                        </div>
                        <div className="form-group">
                            <label>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà*</label>
                            <input type="text" name="address" value={formData.address} onChange={handleInputChange} required />
                        </div>
                        <div className="form-row three-columns">
                            <div className="form-group">
                                <label>‡∏ï‡∏≥‡∏ö‡∏•/‡πÅ‡∏Ç‡∏ß‡∏á*</label>
                                <input type="text" name="district" value={formData.district} onChange={handleInputChange} required />
                            </div>
                            <div className="form-group">
                                <label>‡∏≠‡∏≥‡πÄ‡∏†‡∏≠/‡πÄ‡∏Ç‡∏ï*</label>
                                <input type="text" name="city" value={formData.city} onChange={handleInputChange} required />
                            </div>
                            <div className="form-group">
                                <label>‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î*</label>
                                <input type="text" name="province" value={formData.province} onChange={handleInputChange} required />
                            </div>
                        </div>
                        <div className="form-group">
                            <label>‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå*</label>
                            <input type="text" name="zip_code" value={formData.zip_code} onChange={handleInputChange} maxLength={5} required />
                        </div>
                        <button type="submit" className="submit-button" disabled={loadingSubmit || !dog}>
                            {loadingSubmit ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á...' : '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á'}
                        </button>
                    </form>
                </div>
            </div>
        </div>
    );
};

export default AdoptionForm;